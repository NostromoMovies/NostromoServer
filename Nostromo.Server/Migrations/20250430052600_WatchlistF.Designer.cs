// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Nostromo.Server.Database;

#nullable disable

namespace Nostromo.Server.Migrations
{
    [DbContext(typeof(NostromoDbContext))]
    [Migration("20250430052600_WatchlistF")]
    partial class WatchlistF
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.0");

            modelBuilder.Entity("GenreTvRecommendation", b =>
                {
                    b.Property<int>("TvRecommendationsRecommendationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenresGenreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GenresName")
                        .HasColumnType("TEXT");

                    b.HasKey("TvRecommendationsRecommendationID", "GenresGenreID", "GenresName");

                    b.HasIndex("GenresGenreID", "GenresName");

                    b.ToTable("GenreTvRecommendation");
                });

            modelBuilder.Entity("Nostromo.Server.Database.AuthToken", b =>
                {
                    b.Property<int>("AuthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("AuthId");

                    b.HasIndex("UserId");

                    b.ToTable("AuthTokens");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Collection", b =>
                {
                    b.Property<int>("CollectionID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterPath")
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfileID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CollectionID");

                    b.HasIndex("ProfileID");

                    b.HasIndex("UserID");

                    b.ToTable("Collections");
                });

            modelBuilder.Entity("Nostromo.Server.Database.CollectionItem", b =>
                {
                    b.Property<int>("CollectionItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CollectionID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TmdbMovieID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TmdbTvID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CollectionItemID");

                    b.HasIndex("CollectionID");

                    b.HasIndex("TmdbMovieID");

                    b.HasIndex("TmdbTvID");

                    b.ToTable("CollectionItems");
                });

            modelBuilder.Entity("Nostromo.Server.Database.CrossRefVideoTMDBMovie", b =>
                {
                    b.Property<int>("CrossRefVideoTMDBMovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TMDBMovieID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VideoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CrossRefVideoTMDBMovieID");

                    b.HasIndex("TMDBMovieID");

                    b.HasIndex("VideoID");

                    b.ToTable("CrossRefVideoTMDBMovies");
                });

            modelBuilder.Entity("Nostromo.Server.Database.CrossRefVideoTvEpisode", b =>
                {
                    b.Property<int>("CrossRefVideoTvEpisodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<int>("TvEpisodeId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VideoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("CrossRefVideoTvEpisodeID");

                    b.HasIndex("TvEpisodeId");

                    b.HasIndex("VideoID");

                    b.ToTable("CrossRefVideoTvEpisodes");
                });

            modelBuilder.Entity("Nostromo.Server.Database.DuplicateFile", b =>
                {
                    b.Property<int>("DuplicateFileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FilePath2")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ImportFolderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImportFolderType")
                        .HasColumnType("INTEGER");

                    b.HasKey("DuplicateFileID");

                    b.ToTable("DuplicateFiles");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Episode", b =>
                {
                    b.Property<int>("EpisodeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Airdate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EpisodeName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Runtime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeasonID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("StillPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<int>("VoteCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("EpisodeID");

                    b.HasIndex("SeasonID");

                    b.ToTable("Episodes");
                });

            modelBuilder.Entity("Nostromo.Server.Database.ExampleHash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ED2K")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TmdbId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ExampleHash");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ED2K = "5d886780825db91bbc390f10f1b6c95c",
                            Title = "Alien",
                            TmdbId = 348
                        },
                        new
                        {
                            Id = 2,
                            ED2K = "da1a506c0ee1fe6c46ec64fd57faa924",
                            Title = "Aliens",
                            TmdbId = 679
                        },
                        new
                        {
                            Id = 3,
                            ED2K = "b33d9c30eb480eca99e82dbbab3aad0e",
                            Title = "Alien 3",
                            TmdbId = 8077
                        },
                        new
                        {
                            Id = 4,
                            ED2K = "b8b18d2129c23ce7be0f20192ab5cc7d",
                            Title = "2001: A Space Odyssey",
                            TmdbId = 62
                        },
                        new
                        {
                            Id = 5,
                            ED2K = "f1f92c24015ee61c26ee14e1a620c2f1",
                            Title = "Blade Runner",
                            TmdbId = 78
                        },
                        new
                        {
                            Id = 6,
                            ED2K = "5c397afacb0a7e4ca53a208c70a60312",
                            Title = "Close Encounters of the Third Kind",
                            TmdbId = 840
                        },
                        new
                        {
                            Id = 7,
                            ED2K = "bd48b94f65b1cb6526acc0cd0b52e733",
                            Title = "Big Hero 6",
                            TmdbId = 177572
                        },
                        new
                        {
                            Id = 8,
                            ED2K = "2bc38b9668690f1b5d83bcd5d0b8875c",
                            Title = "Arrival",
                            TmdbId = 329865
                        },
                        new
                        {
                            Id = 9,
                            ED2K = "aa9f497e20846c5018f47e025d06d190",
                            Title = "A.I. Artificial Intelligence",
                            TmdbId = 644
                        },
                        new
                        {
                            Id = 10,
                            ED2K = "6dc784b7b42faa32d70106b6008137fc",
                            Title = "Blade Runner 2049",
                            TmdbId = 335984
                        },
                        new
                        {
                            Id = 11,
                            ED2K = "8891dba5d7423e41be1670f5022514a6",
                            Title = "Flight of the Navigator",
                            TmdbId = 10122
                        },
                        new
                        {
                            Id = 12,
                            ED2K = "77ec11a8b08ee689cb4e8e9cbae406fb",
                            Title = "The Iron Giant",
                            TmdbId = 10386
                        },
                        new
                        {
                            Id = 13,
                            ED2K = "cde961b6799ad092ffe00e17ebd95cdb",
                            Title = "Meet The Robinsons",
                            TmdbId = 1267
                        },
                        new
                        {
                            Id = 14,
                            ED2K = "e16a3334eaa4a1b36c7ffb0eb2ec0c35",
                            Title = "Event Horizon",
                            TmdbId = 8413
                        },
                        new
                        {
                            Id = 15,
                            ED2K = "89d725b0be5df4643edcaca155ecf165",
                            Title = "Lilo & Stitch",
                            TmdbId = 11544
                        },
                        new
                        {
                            Id = 16,
                            ED2K = "4ca3e7ad70bd6595ee68fabfd0273534",
                            Title = "E.T. The Extra Terrestrial",
                            TmdbId = 601
                        },
                        new
                        {
                            Id = 17,
                            ED2K = "a60bc42199d8a34638087b267bea1400",
                            Title = "The Thing",
                            TmdbId = 1091
                        },
                        new
                        {
                            Id = 18,
                            ED2K = "f69fa1b76e69c8141e52945175bd81d0",
                            Title = "The Last Starfighter",
                            TmdbId = 11884
                        },
                        new
                        {
                            Id = 19,
                            ED2K = "b092919efab8f3c27e5e67cf15a02acd",
                            Title = "Treasure Planet",
                            TmdbId = 9016
                        },
                        new
                        {
                            Id = 20,
                            ED2K = "8ca300a5aa1a73c8419f4d1622c3364d",
                            Title = "WALL-E",
                            TmdbId = 10681
                        },
                        new
                        {
                            Id = 21,
                            ED2K = "c0c717a4f8fad3366520d47c702ab5ad",
                            Title = "Total Recall",
                            TmdbId = 861
                        });
                });

            modelBuilder.Entity("Nostromo.Server.Database.Genre", b =>
                {
                    b.Property<int>("GenreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("GenreID", "Name");

                    b.HasIndex("GenreID", "Name")
                        .IsUnique();

                    b.ToTable("Genres");
                });

            modelBuilder.Entity("Nostromo.Server.Database.ImportFolder", b =>
                {
                    b.Property<int>("ImportFolderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FolderLocation")
                        .IsRequired()
                        .HasColumnType("TEXT")
                        .HasColumnName("ImportFolderLocation");

                    b.Property<int>("ImportFolderType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsDropDestination")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsDropSource")
                        .HasColumnType("INTEGER");

                    b.Property<int>("IsWatched")
                        .HasColumnType("INTEGER");

                    b.HasKey("ImportFolderID");

                    b.ToTable("ImportFolders");
                });

            modelBuilder.Entity("Nostromo.Server.Database.MovieGenre", b =>
                {
                    b.Property<int>("MovieID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("MovieID", "GenreID", "Name");

                    b.HasIndex("GenreID", "Name");

                    b.ToTable("MovieGenres");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Profile", b =>
                {
                    b.Property<int>("ProfileID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Age")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.Property<int>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("posterPath")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("TEXT");

                    b.HasKey("ProfileID");

                    b.HasIndex("UserId");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("Nostromo.Server.Database.RecommendationGenre", b =>
                {
                    b.Property<int>("RecommendationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("RecommendationID", "GenreID", "Name");

                    b.HasIndex("GenreID", "Name");

                    b.ToTable("RecommendationGenres");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Season", b =>
                {
                    b.Property<int>("SeasonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("Airdate")
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PosterPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TvShowID")
                        .HasColumnType("INTEGER");

                    b.Property<double>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<string>("seasonName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("SeasonID");

                    b.HasIndex("TvShowID");

                    b.ToTable("Seasons");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TMDBMovie", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasColumnName("TMDBMovieID");

                    b.Property<string>("BackdropPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Certification")
                        .HasColumnType("TEXT");

                    b.Property<int>("CreatedAt")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsAdult")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsInCollection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<bool>("IsVideo")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("PosterPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Runtime")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TMDBCollectionID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TMDBID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("UserRating")
                        .HasColumnType("real");

                    b.Property<int>("UserVotes")
                        .HasColumnType("INTEGER");

                    b.Property<float>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<int>("VoteCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("MovieID");

                    b.ToTable("Movies");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TMDBMovieCast", b =>
                {
                    b.Property<int>("TMDBMovieCastID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<int>("CastId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Character")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditID")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KnownForDepartment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginalName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("ProfilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("TMDBMovieID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TMDBPersonID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TMDBMovieCastID");

                    b.HasIndex("TMDBMovieID");

                    b.HasIndex("TMDBPersonID");

                    b.ToTable("MovieCasts");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TMDBMovieCrew", b =>
                {
                    b.Property<int>("TMDBMovieCrewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreditID")
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Job")
                        .HasColumnType("TEXT");

                    b.Property<string>("KnownForDepartment")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("ProfilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("TMDBMovieID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("TMDBPersonID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TMDBMovieCrewID");

                    b.HasIndex("TMDBMovieID");

                    b.HasIndex("TMDBPersonID");

                    b.ToTable("MovieCrews");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TMDBPerson", b =>
                {
                    b.Property<int>("TMDBPersonID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Aliases")
                        .HasColumnType("TEXT")
                        .HasColumnName("Aliases");

                    b.Property<string>("BirthDay")
                        .HasMaxLength(10)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("DeathDay")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnglishBio")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnglishName")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<int?>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<bool?>("IsRestricted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<DateTime>("LastUpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("PlaceOfBirth")
                        .HasMaxLength(255)
                        .HasColumnType("TEXT");

                    b.Property<string>("ProfilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("TMDBID")
                        .HasColumnType("INTEGER");

                    b.HasKey("TMDBPersonID");

                    b.HasIndex("TMDBID")
                        .IsUnique();

                    b.ToTable("People");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TMDBRecommendation", b =>
                {
                    b.Property<int>("RecommendationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackdropPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MediaType")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalTitle")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("PosterPath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ReleaseDate")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TMDBMovieID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Video")
                        .HasColumnType("INTEGER");

                    b.Property<double>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<int>("VoteCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("RecommendationID");

                    b.HasIndex("TMDBMovieID", "Id");

                    b.ToTable("Recommendations");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvExampleHash", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ED2K")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("EpisodeNumber")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SeasonNumber")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("TvShowId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("TvExampleHashes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ED2K = "a413da8e3e3bb02237795b2dc9e06b8d",
                            EpisodeNumber = 1,
                            SeasonNumber = 1,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 2,
                            ED2K = "ee4a746481ec4a6a909943562aefe86a",
                            EpisodeNumber = 2,
                            SeasonNumber = 1,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 3,
                            ED2K = "a73c8cf075a960af6004a257432b2435",
                            EpisodeNumber = 3,
                            SeasonNumber = 1,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 4,
                            ED2K = "ea85563f8f9c051cab70a0139c5118da",
                            EpisodeNumber = 4,
                            SeasonNumber = 1,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 5,
                            ED2K = "c5f51c3dc5b4b45c68e428ccc062949f",
                            EpisodeNumber = 5,
                            SeasonNumber = 1,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 6,
                            ED2K = "7203ced34b4989a4527457a4c564e2c1",
                            EpisodeNumber = 1,
                            SeasonNumber = 2,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 7,
                            ED2K = "8accb9f07416005acdd4d4d9bc790295",
                            EpisodeNumber = 2,
                            SeasonNumber = 2,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 8,
                            ED2K = "41da21faa145d66664535b5084240096",
                            EpisodeNumber = 3,
                            SeasonNumber = 2,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 9,
                            ED2K = "2bda47a34c226363615c0355e001683b",
                            EpisodeNumber = 4,
                            SeasonNumber = 2,
                            Title = "The Blacklist",
                            TvShowId = 46952
                        },
                        new
                        {
                            Id = 10,
                            ED2K = "15f73bad52cd5ce13a95673e90708939",
                            EpisodeNumber = 1,
                            SeasonNumber = 1,
                            Title = "The National Anthem",
                            TvShowId = 42009
                        },
                        new
                        {
                            Id = 11,
                            ED2K = "1f0103e25e21ae6b3092a3a53c91f21b",
                            EpisodeNumber = 2,
                            SeasonNumber = 1,
                            Title = "Fifteen Million Merits",
                            TvShowId = 42009
                        },
                        new
                        {
                            Id = 12,
                            ED2K = "4dc74beecc6eb8937b540ff4a51a8bea",
                            EpisodeNumber = 3,
                            SeasonNumber = 1,
                            Title = "The Entire History of You",
                            TvShowId = 42009
                        });
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvGenre", b =>
                {
                    b.Property<int>("TvShowID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("TvShowID", "GenreID", "Name");

                    b.HasIndex("GenreID", "Name");

                    b.ToTable("TvGenres");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvMediaCast", b =>
                {
                    b.Property<int>("MediaCastID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("CastId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Character")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreditID")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("KnownForDepartment")
                        .HasColumnType("TEXT");

                    b.Property<int>("MediaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<int?>("Order")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OriginalName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("ProfilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("TMDBPersonID")
                        .HasColumnType("INTEGER");

                    b.HasKey("MediaCastID");

                    b.ToTable("TvMediaCasts");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvMediaCrew", b =>
                {
                    b.Property<int>("MediaCrewID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreditID")
                        .HasColumnType("TEXT");

                    b.Property<string>("Department")
                        .HasColumnType("TEXT");

                    b.Property<int>("Gender")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Job")
                        .HasColumnType("TEXT");

                    b.Property<string>("KnownForDepartment")
                        .HasColumnType("TEXT");

                    b.Property<int>("MediaID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalName")
                        .HasColumnType("TEXT");

                    b.Property<double>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("ProfilePath")
                        .HasColumnType("TEXT");

                    b.Property<int>("TMDBPersonID")
                        .HasColumnType("INTEGER");

                    b.HasKey("MediaCrewID");

                    b.ToTable("TvMediaCrews");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvRecommendation", b =>
                {
                    b.Property<int>("RecommendationID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackdropPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Certification")
                        .HasColumnType("TEXT");

                    b.Property<int>("Id")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("PosterPath")
                        .HasColumnType("TEXT");

                    b.Property<int>("ShowId")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<int?>("VoteCount")
                        .HasColumnType("INTEGER");

                    b.Property<string>("firstAirDate")
                        .HasColumnType("TEXT");

                    b.HasKey("RecommendationID");

                    b.HasIndex("ShowId");

                    b.ToTable("TvRecommendations");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvRecommendationGenre", b =>
                {
                    b.Property<int>("TvRecommendationID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("GenreID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("TvRecommendationID", "GenreID", "Name");

                    b.HasIndex("GenreID", "Name");

                    b.ToTable("TvRecommendationGenres");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvShow", b =>
                {
                    b.Property<int>("TvShowID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Adult")
                        .HasColumnType("INTEGER");

                    b.Property<string>("BackdropPath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Certification")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("FirstAirDate")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsInCollection")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER")
                        .HasDefaultValue(false);

                    b.Property<string>("OriginalLanguage")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("OriginalName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Overview")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double>("Popularity")
                        .HasColumnType("REAL");

                    b.Property<string>("PosterPath")
                        .HasColumnType("TEXT");

                    b.Property<double>("VoteAverage")
                        .HasColumnType("REAL");

                    b.Property<int>("VoteCount")
                        .HasColumnType("INTEGER");

                    b.HasKey("TvShowID");

                    b.ToTable("TvShows");
                });

            modelBuilder.Entity("Nostromo.Server.Database.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Salt")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("UserID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Video", b =>
                {
                    b.Property<int>("VideoID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CRC32")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("ED2K")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("FileSize")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("IsRecognized")
                        .HasColumnType("INTEGER");

                    b.Property<string>("MD5")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("SHA1")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedAt")
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("TEXT")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.HasKey("VideoID");

                    b.ToTable("Videos");
                });

            modelBuilder.Entity("Nostromo.Server.Database.VideoPlace", b =>
                {
                    b.Property<int>("VideoPlaceID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("FilePath")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("ImportFolderID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ImportFolderType")
                        .HasColumnType("INTEGER");

                    b.Property<int>("VideoID")
                        .HasColumnType("INTEGER");

                    b.HasKey("VideoPlaceID");

                    b.HasIndex("VideoID");

                    b.ToTable("VideoPlaces");
                });

            modelBuilder.Entity("Nostromo.Server.Database.WatchList", b =>
                {
                    b.Property<int>("WatchListID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("ProfileID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("UserID")
                        .HasColumnType("INTEGER");

                    b.HasKey("WatchListID");

                    b.HasIndex("ProfileID");

                    b.HasIndex("UserID");

                    b.ToTable("WatchLists");
                });

            modelBuilder.Entity("Nostromo.Server.Database.WatchListItem", b =>
                {
                    b.Property<int>("WatchListItemID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("TEXT");

                    b.Property<int?>("MovieID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("TvShowID")
                        .HasColumnType("INTEGER");

                    b.Property<int>("WatchListID")
                        .HasColumnType("INTEGER");

                    b.HasKey("WatchListItemID");

                    b.HasIndex("MovieID");

                    b.HasIndex("TvShowID");

                    b.HasIndex("WatchListID");

                    b.ToTable("WatchListItems", t =>
                        {
                            t.HasCheckConstraint("CK_WatchListItem_MovieOrTvShow", "(MovieID IS NOT NULL AND TvShowID IS NULL) OR (MovieID IS NULL AND TvShowID IS NOT NULL)");
                        });
                });

            modelBuilder.Entity("Nostromo.Server.Database.WatchStatistic", b =>
                {
                    b.Property<int>("MovieID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("WatchDuration")
                        .HasColumnType("int");

                    b.HasKey("MovieID");

                    b.ToTable("WatchStatistics");
                });

            modelBuilder.Entity("GenreTvRecommendation", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TvRecommendation", null)
                        .WithMany()
                        .HasForeignKey("TvRecommendationsRecommendationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.Genre", null)
                        .WithMany()
                        .HasForeignKey("GenresGenreID", "GenresName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nostromo.Server.Database.AuthToken", b =>
                {
                    b.HasOne("Nostromo.Server.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Collection", b =>
                {
                    b.HasOne("Nostromo.Server.Database.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Nostromo.Server.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Profile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nostromo.Server.Database.CollectionItem", b =>
                {
                    b.HasOne("Nostromo.Server.Database.Collection", "Collection")
                        .WithMany("Items")
                        .HasForeignKey("CollectionID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.TMDBMovie", "TmdbMovie")
                        .WithMany()
                        .HasForeignKey("TmdbMovieID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Nostromo.Server.Database.TvShow", "TmdbTv")
                        .WithMany()
                        .HasForeignKey("TmdbTvID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Collection");

                    b.Navigation("TmdbMovie");

                    b.Navigation("TmdbTv");
                });

            modelBuilder.Entity("Nostromo.Server.Database.CrossRefVideoTMDBMovie", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TMDBMovie", "TMDBMovie")
                        .WithMany()
                        .HasForeignKey("TMDBMovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TMDBMovie");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Nostromo.Server.Database.CrossRefVideoTvEpisode", b =>
                {
                    b.HasOne("Nostromo.Server.Database.Episode", "TvEpisode")
                        .WithMany()
                        .HasForeignKey("TvEpisodeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvEpisode");

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Episode", b =>
                {
                    b.HasOne("Nostromo.Server.Database.Season", "Season")
                        .WithMany()
                        .HasForeignKey("SeasonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Season");
                });

            modelBuilder.Entity("Nostromo.Server.Database.MovieGenre", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TMDBMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Profile", b =>
                {
                    b.HasOne("Nostromo.Server.Database.User", "User")
                        .WithMany("Profiles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nostromo.Server.Database.RecommendationGenre", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TMDBRecommendation", "Recommendation")
                        .WithMany()
                        .HasForeignKey("RecommendationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("Recommendation");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Season", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TvShow", "TvShow")
                        .WithMany("Seasons")
                        .HasForeignKey("TvShowID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvShow");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TMDBMovieCast", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TMDBMovie", null)
                        .WithMany()
                        .HasForeignKey("TMDBMovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.TMDBPerson", null)
                        .WithMany()
                        .HasForeignKey("TMDBPersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nostromo.Server.Database.TMDBMovieCrew", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TMDBMovie", null)
                        .WithMany()
                        .HasForeignKey("TMDBMovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.TMDBPerson", null)
                        .WithMany()
                        .HasForeignKey("TMDBPersonID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Nostromo.Server.Database.TMDBRecommendation", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TMDBMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("TMDBMovieID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvGenre", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TvShow", "TvShow")
                        .WithMany("TvGenres")
                        .HasForeignKey("TvShowID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("TvShow");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvRecommendation", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TvShow", "TvShow")
                        .WithMany()
                        .HasForeignKey("ShowId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TvShow");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvRecommendationGenre", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TvRecommendation", "TvRecommendation")
                        .WithMany("TvRecommendationGenres")
                        .HasForeignKey("TvRecommendationID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Nostromo.Server.Database.Genre", "Genre")
                        .WithMany()
                        .HasForeignKey("GenreID", "Name")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Genre");

                    b.Navigation("TvRecommendation");
                });

            modelBuilder.Entity("Nostromo.Server.Database.VideoPlace", b =>
                {
                    b.HasOne("Nostromo.Server.Database.Video", "Video")
                        .WithMany()
                        .HasForeignKey("VideoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Video");
                });

            modelBuilder.Entity("Nostromo.Server.Database.WatchList", b =>
                {
                    b.HasOne("Nostromo.Server.Database.Profile", "Profile")
                        .WithMany()
                        .HasForeignKey("ProfileID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Nostromo.Server.Database.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("Profile");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Nostromo.Server.Database.WatchListItem", b =>
                {
                    b.HasOne("Nostromo.Server.Database.TMDBMovie", "Movie")
                        .WithMany()
                        .HasForeignKey("MovieID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nostromo.Server.Database.TvShow", "TvShow")
                        .WithMany()
                        .HasForeignKey("TvShowID")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Nostromo.Server.Database.WatchList", "WatchList")
                        .WithMany("Items")
                        .HasForeignKey("WatchListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Movie");

                    b.Navigation("TvShow");

                    b.Navigation("WatchList");
                });

            modelBuilder.Entity("Nostromo.Server.Database.Collection", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvRecommendation", b =>
                {
                    b.Navigation("TvRecommendationGenres");
                });

            modelBuilder.Entity("Nostromo.Server.Database.TvShow", b =>
                {
                    b.Navigation("Seasons");

                    b.Navigation("TvGenres");
                });

            modelBuilder.Entity("Nostromo.Server.Database.User", b =>
                {
                    b.Navigation("Profiles");
                });

            modelBuilder.Entity("Nostromo.Server.Database.WatchList", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
